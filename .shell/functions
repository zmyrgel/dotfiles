# Functions -*- mode: sh; coding: utf-8-unix; -*-
# ---------------------------------------------

function clamscan {
    mkdir -p /tmp/virus
    nice -n 19 clamscan --verbose --max-recursion=20 -m -i --detect-pua --move=/tmp/virus -r
    cd /tmp/virus
    echo -n "Viruses:"
    ls
}

function qemiso {
    qemu -boot d -m 384 -smp 2 -localtime \
    -net nic \
    -net user \
    -no-fd-bootchk -no-acpi -cdrom $1
}

function qemimg {
    qemu-img create -f qcow2 $i.qcow 10G
}

function qeminst {
    echo "Supply disk.img and path to iso or drive for installing from"
        qemu -boot d -m 384 -smp 2 -localtime \
        -net nic \
        -net user \
        -no-fd-bootchk -no-acpi \
        -hda /media/nfs/qemu/$1.qcow -cdrom $2
}

function qemrun {
    echo "Supply drive image to boot from"
    qemu -boot c -m 512 -smp 2 -localtime \
    -net nic \
    -net user \
    -no-fd-bootchk -no-acpi -hda /media/nfs/qemu/$1.qcow
}

function spell {
    echo "$@" | aspell -a
}

function calc {
    echo "$*" | bc;
}

#  https://dgl.cx/wikipedia-dns
function wiki {
    [ -x /usr/sbin/host ] && host -t txt "$1".wp.dg.cx | cut -f 3
}

# Quick find
function f {
    echo "find . -iname \"*$1*\""
    find . -iname "*$1*"
}

# add by artist to mpc
function addartist {
  if [ $# -lt 1 ]; then
    echo "usage: addartist [artist]"
  else
    mpc clear
    mpc search artist "$*" | mpc add
    mpc --no-status play
  fi
}

# recursively fix dir/file permissions on a given directory
function fix {
  if [ -d "$1" ]; then
    find "$1" -type d -exec chmod 755 {} \;
    find "$1" -type f -exec chmod 644 {} \;
  else
    echo "usage: fix [directory]"
  fi
}
