# Menu config for pekwm

# Variables
INCLUDE = "vars"

RootMenu = "Pekwm" {
        Entry = "Terminal" { Actions = "Exec $TERM &" }
        Entry = "Browser" { Actions = "Exec $BROWSER &" }
        Entry = "Run.." { Actions = "ShowCmdDialog" }

        Separator {}

        Submenu = "config" {
                Submenu = "pek config" {
                    Entry = "~/.pekwm" { Actions = "Exec $FILEMANAGER ~/.pekwm &" }
                    Entry = "~start" { Actions = "Exec $EDIT ~/.pekwm/start &" }
                    Entry = "~menu" { Actions = "Exec $EDIT ~/.pekwm/menu &" }
                    Entry = "~keys" { Actions = "Exec $EDIT ~/.pekwm/keys &" }
                    Entry = "~config" { Actions = "Exec $EDIT ~/.pekwm/config &" }
                    Entry = "~autoprop" { Actions = "Exec $EDIT ~/.pekwm/autoproperties &" }
                }
                Submenu = "pek themes" {
                    Entry { Actions = "Dynamic /usr/local/share/pekwm/scripts/pekwm_themeset.sh /usr/local/share/pekwm/themes" }
                    Entry { Actions = "Dynamic /usr/local/share/pekwm/scripts/pekwm_themeset.sh ~/.pekwm/themes" }
                }
                Submenu = "gtk themes" {
                    Entry { Actions = "Dynamic ~/.pekwm/scripts/pekwm_gtk_menu -l" }
                }
                # Entry = "interface" { Actions = "Exec lxappearance &" }

                Submenu = "Wallpaper" {
                    Entry = "" { Actions = "Dynamic ~/.pekwm/scripts/pekwm_wp_menu.pl ~/wallpapers" }
                }
                Submenu = "3D effect" {
                    Entry = "" { Actions = "Dynamic ~/.pekwm/scripts/pekwm_xcompmgr.sh" }
                }
                Entry = "display" { Actions = "Exec grandr &" }
                Submenu = "conky" {
                    Entry = "edit rc" { Actions = "Exec $EDIT ~/.pekwm/pek_conkyrc &" }
                    Entry = "restart" { Actions = "Exec ~/.pekwm/pek_conkywonky &" }
                }
                Submenu = "tint2" {
                    Entry = "edit rc" { Actions = "Exec $EDIT ~/.pekwm/pek_tint2rc &" }
                    Entry = "restart" { Actions = "Exec ~/.pekwm/pek_tintwonky &" }
                }
                Entry = "screensaver" { Actions ="Exec gnome-screensaver-preferences &" }
        }

        Submenu = "Apps" {
            Submenu = "Graph" {
                Entry = "digikam" { Actions = "Exec digikam" }
                Entry = "display" { Actions = "Exec display" }
                Entry = "eog" { Actions = "Exec eog" }
                Entry = "gwenview" { Actions = "Exec gwenview" }
                Entry = "shotwell" { Actions = "Exec shotwell" }
                Entry = "comix" { Actions = "Exec comix &" }
                Entry = "ghtumb" { Actions = "Exec gthumb ~/images &" }
                Entry = "Gimp" { Actions = "Exec gimp &" }
                Entry = "inkscape" { Actions = "Exec inkscape &" }
                Entry = "agave" { Actions = "Exec agave &" }
                Entry = "gcolor2" { Actions = "Exec gcolor2 &" }
                Entry = "phatch" { Actions = "Exec phatch &" }
                Entry = "font viewer" { Actions = "Exec gnome-specimen &" }
                Entry = "scan util" { Actions = "Exec xsane &" }
                Submenu = "screenshot" {
                    Entry = "now" { Actions = "Exec scrot '%Y-%m-%d--%s_$wx$h_scrot.png' -e 'mv $f ~/images/ && gthumb ~/images/$f' &" }
                    Entry = "in 5 secs" { Actions = "Exec scrot -d 5 '%Y-%m-%d--%s_$wx$h_scrot.png' -e 'mv $f ~/images/ && gthumb ~/images/$f' &" }
                    Entry = "in 10 secs" { Actions = "Exec scrot -d 10 '%Y-%m-%d--%s_$wx$h_scrot.png' -e 'mv $f ~/images/ && gthumb ~/images/$f' &" }
                }
            }
            Submenu = "Web" {
                Entry = "firefox" { Actions = "Exec firefox &" }
                Entry = "torrent" { Actions = "Exec transmission &" }
                Entry = "elinks" { Actions = "Exec $TERM -e elinks &" }
                Entry = "xchat" { Actions = "Exec xchat &" }
                Entry = "chromium" { Actions = "Exec chromium" }
                Entry = "opera" { Actions = "Exec opera" }
            }
            Submenu = "Tools" {
                Entry = "searchtool" { Actions = "Exec catfish &" }
                Entry = "disk usage" { Actions = "Exec baobab &" }
                Entry = "calcul" { Actions = "Exec gcalctool &" }
                Entry = "notes" { Actions = "Exec xpad &" }
                Entry = "agenda" { Actions = "Exec osmo &" }
                Entry = "screenshot" { Actions = "Exec scrot '%Y-%m-%d--%s_$wx$h_scrot.png' -e 'mv $f ~/images/ && gthumb ~/images/$f'" & }
                Entry = "cd/dvd burner" { Actions = "Exec xfburn &" }
                Entry = "volume" { Actions = "Exec gnome-volume-control &" }
            }
            Submenu = "Editors" {
                Entry = "emacs" { Actions = "Exec emacs" }
                Entry = "emacs terminal" { Actions = "Exec $TERM -title emacs -e emacs -nw" }
                Entry = "gedit" { Actions = "Exec gedit" }
                Entry = "gvim" { Actions = "Exec gvim" }
                Entry = "kate" { Actions = "Exec kate" }
                Entry = "vim" { Actions = "Exec $TERM -title vim -e vim" }
            }
            Submenu = "eMail" {
                Entry = "claws-mail" { Actions = "Exec claws-mail" }
                Entry = "evolution" { Actions = "Exec evolution" }
                Entry = "kmail" { Actions = "Exec kmail" }
                Entry = "mutt" { Actions = "Exec $TERM -e mutt" }
                Entry = "thunderbird" { Actions = "Exec thunderbird" }
            }
            Submenu = "Filemanager" {
                Entry = "dolphin" { Actions = "Exec dolphin" }
                Entry = "mc" { Actions = "Exec $TERM -e mc" }
                Entry = "nautilus" { Actions = "Exec nautilus" }
                Entry = "pcmanfm" { Actions = "Exec pcmanfm" }
                Entry = "rox" { Actions = "Exec rox" }
                Entry = "thunar" { Actions = "Exec thunar" }
            }
            Submenu = "IDE" {
                Entry = "anjuta" { Actions = "Exec anjuta" }
                Entry = "eclipse" { Actions = "Exec eclipse" }
                Entry = "kdevelop" { Actions = "Exec kdevelop" }
            }
            Submenu = "IM" {
                Entry = "empathy" { Actions = "Exec empathy" }
                Entry = "kopete" { Actions = "Exec kopete" }
                Entry = "pidgin" { Actions = "Exec pidgin" }
                Entry = "psi" { Actions = "Exec psi" }
                Entry = "skype" { Actions = "Exec skype" }
            }
            Submenu = "Multimedia" {
                Entry = "vlc" { Actions = "Exec vlc" }
                Entry = "amarok" { Actions = "Exec amarok" }
                Entry = "banshee" { Actions = "Exec banshee" }
                Entry = "rhythmbox" { Actions = "Exec rhythmbox" }
                Entry = "smplayer" { Actions = "Exec smplayer" }
                Entry = "alsamixer" { Actions = "Exec $TERM -title alsamixer -e alsamixer" }
                Entry = "moc" { Actions = "Exec $TERM -e mocp -T transparent-background &" }
                Entry = "audacity" { Actions = "Exec audacity &" }
                Entry = "cdripper" { Actions = "Exec sound-juicer &" }
                Entry = "soundconverter" { Actions = "Exec soundconverter &" }
                Entry = "avidemux" { Actions = "Exec avidemux &" }
                Entry = "winff" { Actions = "Exec winff &" }
                Entry = "cd/dvd burner" { Actions = "Exec xfburn &" }
                Entry = "desktop record" { Actions = "Exec gtk-recordMyDesktop &" }
                Entry = "volume" { Actions = "Exec gnome-volume-control &" }
            }
            Submenu = "Office" {
                Entry = "LOffice - Calc" { Actions = "Exec libreoffice --calc" }
                Entry = "LOffice - Draw" { Actions = "Exec libreoffice --draw" }
                Entry = "LOffice - Impress" { Actions = "Exec libreoffice --impress" }
                Entry = "LOffice - Writer" { Actions = "Exec libreoffice --writer" }
            }
            Submenu = "VoIP" {
                Entry = "ekiga" { Actions = "Exec ekiga" }
                Entry = "jitsi" { Actions = "Exec jitsi" }
                Entry = "sflphone" { Actions = "Exec sflphone" }
            }
    }

    Submenu = "admin" {
        Entry = "debs manager" { Actions = "Exec gksudo synaptic &" }
        Entry = "partitioner" { Actions = "Exec gksudo gparted &" }
        Entry = "root term" { Actions = "Exec gksudo $TERM &"}
        Entry = "root filer" { Actions = "Exec gksudo $FILEMANAGER &" }
    }

    Separator {}

    Entry = "" { Actions = "Dynamic  ~/.pekwm/scripts/pekwm_time.sh" }

    Separator {}

    Separator {}

    Entry = "Take screenshot" { Actions = "Exec $_PEKWM_SCRIPT_PATH/pekwm_screenshot.sh" }

    Separator {}

    Submenu = "Go to" {
        SubMenu = "Workspace" {
            # Create goto menu once per pekwm config reload. The fast way that
            # will work for most if not all users.
            COMMAND = "$_PEKWM_SCRIPT_PATH/pekwm_ws_menu.sh goto"
            # Create goto menu every time the menu is opened. The slow way.
            # This is what you want if you are using external tools to make
            # the amount of workspaces something else than what you define in
            # ~/.pekwm/config. You will know if you want this.
            # Entry = "" { Actions = "Dynamic $_PEKWM_SCRIPT_PATH/pekwm_ws_menu.sh goto dynamic" }
        }
        Entry = "Window.." { Actions = "ShowMenu GotoClient True" }
    }

    Submenu = "Pekwm" {
        Submenu = "Themes" {
            Entry { Actions = "Dynamic $_PEKWM_SCRIPT_PATH/pekwm_themeset.sh $_PEKWM_THEME_PATH" }
            Entry { Actions = "Dynamic $_PEKWM_SCRIPT_PATH/pekwm_themeset.sh ~/.pekwm/themes" }
        }
        Entry = "Reload" { Actions = "Reload" }
        Entry = "Restart" { Actions = "Restart" }
        Entry = "Exit" { Actions = "Exit" }
        Submenu = "Exit to" {
            Entry = "Xterm" { Actions = "RestartOther xterm" }
            Entry = "TWM" { Actions = "RestartOther twm" }
        }
        Submenu = "System" {
            Entry = "Suspend" { Actions = "Exec zzz &" }
            Entry = "Hibernate" { Actions = "Exec ZZZ &" }
            Entry = "Shutdown" { Actions = "Exec halt -p &" }
        }
    }
}

WindowMenu = "Window Menu" {
        Entry = "(Un)Stick" { Actions = "Toggle Sticky" }
        Entry = "(Un)Shade" { Actions = "Toggle Shaded" }
        Entry = "Iconify" { Actions = "Set Iconified" }
        Entry = "Command.." { Actions = "ShowCmdDialog" }

        Submenu = "Maximize" {
                Entry = "Toggle Full" { Actions = "Toggle Maximized True True" }
                Entry = "Toggle Horizontal" { Actions = "Toggle Maximized True False" }
                Entry = "Toggle Vertical" { Actions = "Toggle Maximized False True" }
        }
        Submenu = "Fill" {
                Entry = "Full" { Actions = "MaxFill True True" }
                Entry = "Horizontal" { Actions = "MaxFill True False" }
                Entry = "Vertical" { Actions = "MaxFill False True" }
        }
        Submenu = "Stacking" {
                Entry = "Raise" { Actions = "Raise" }
                Entry = "Lower" { Actions = "Lower" }
                Entry = "Toggle Always On Top" { Actions = "Toggle AlwaysOnTop" }
                Entry = "Toggle Always Below" { Actions = "Toggle AlwaysBelow" }
        }
        Submenu = "Decorations" {
                Entry = "Toggle Decorations" { Actions = "Toggle DecorBorder; Toggle DecorTitlebar" }
                Entry = "Toggle Borders" { Actions = "Toggle DecorBorder" }
                Entry = "Toggle Titlebar" { Actions = "Toggle DecorTitlebar" }
        }
        Submenu = "Skip" {
                Entry = "Toggle showing this frame in menus" { Actions = "Toggle Skip Menus" }
                Entry = "Toggle including this frame in focus toggle" { Actions = "Toggle Skip FocusToggle" }
                Entry = "Toggle if this frame snaps to other windows" { Actions = "Toggle Skip Snap" }
        }
        SubMenu = "Send To" {
                # Create sendto menu once per pekwm config reload. The fast way that
                # will work for most if not all users.
                COMMAND = "$_PEKWM_SCRIPT_PATH/pekwm_ws_menu.sh send"
                # Create sendto menu every time the menu is opened. The slow way.
                # This is what you want if you are using external tools to make
                # the amount of workspaces something else than what you define in
                # ~/.pekwm/config. You will know if you want this.
                # Entry = "" { Actions = "Dynamic $_PEKWM_SCRIPT_PATH/pekwm_ws_menu.sh send dynamic" }
        }
        Separator {}
        Entry = "Close" { Actions = "Close" }
        Submenu = "Kill" { Entry = "Kill application" { Actions = "Kill" } }
}
